// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: v1/friend.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//性别枚举
//enum Sex{
//    UNKNOWN_SEX = 0;//未知
//    SECRET = 1;//保密
//    BOY = 2;//男
//    GIRL = 3;//女
//}
//添加好友方式枚举
type AddFriendType int32

const (
	AddFriendType_UNKNOWN_TYPE AddFriendType = 0 //未知
)

// Enum value maps for AddFriendType.
var (
	AddFriendType_name = map[int32]string{
		0: "UNKNOWN_TYPE",
	}
	AddFriendType_value = map[string]int32{
		"UNKNOWN_TYPE": 0,
	}
)

func (x AddFriendType) Enum() *AddFriendType {
	p := new(AddFriendType)
	*p = x
	return p
}

func (x AddFriendType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddFriendType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_friend_proto_enumTypes[0].Descriptor()
}

func (AddFriendType) Type() protoreflect.EnumType {
	return &file_v1_friend_proto_enumTypes[0]
}

func (x AddFriendType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddFriendType.Descriptor instead.
func (AddFriendType) EnumDescriptor() ([]byte, []int) {
	return file_v1_friend_proto_rawDescGZIP(), []int{0}
}

//好友操作类型枚举
type FriendHandleType int32

const (
	FriendHandleType_UNKNOWN_FRIEND_TYPE FriendHandleType = 0 //未知
	FriendHandleType_CREATE_FRIEND       FriendHandleType = 1 //添加好友
	FriendHandleType_UPDATE_FRIEND       FriendHandleType = 2 //修改好友信息
	FriendHandleType_SEARCH_FRIEND_INFO  FriendHandleType = 3 //查找好友信息
	//    DELETE_FRIEND = 4;//删除好友
	//    BLACK_FRIEND = 5;//拉黑好友
	FriendHandleType_LIST_FRIEND FriendHandleType = 6 //好友列表
)

// Enum value maps for FriendHandleType.
var (
	FriendHandleType_name = map[int32]string{
		0: "UNKNOWN_FRIEND_TYPE",
		1: "CREATE_FRIEND",
		2: "UPDATE_FRIEND",
		3: "SEARCH_FRIEND_INFO",
		6: "LIST_FRIEND",
	}
	FriendHandleType_value = map[string]int32{
		"UNKNOWN_FRIEND_TYPE": 0,
		"CREATE_FRIEND":       1,
		"UPDATE_FRIEND":       2,
		"SEARCH_FRIEND_INFO":  3,
		"LIST_FRIEND":         6,
	}
)

func (x FriendHandleType) Enum() *FriendHandleType {
	p := new(FriendHandleType)
	*p = x
	return p
}

func (x FriendHandleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FriendHandleType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_friend_proto_enumTypes[1].Descriptor()
}

func (FriendHandleType) Type() protoreflect.EnumType {
	return &file_v1_friend_proto_enumTypes[1]
}

func (x FriendHandleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FriendHandleType.Descriptor instead.
func (FriendHandleType) EnumDescriptor() ([]byte, []int) {
	return file_v1_friend_proto_rawDescGZIP(), []int{1}
}

//好友操作(上行data数据)
type FriendHandle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type FriendHandleType `protobuf:"varint,1,opt,name=type,proto3,enum=FriendHandleType" json:"type,omitempty"` //操作类型
	Data []byte           `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`                        //数据
}

func (x *FriendHandle) Reset() {
	*x = FriendHandle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_friend_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendHandle) ProtoMessage() {}

func (x *FriendHandle) ProtoReflect() protoreflect.Message {
	mi := &file_v1_friend_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendHandle.ProtoReflect.Descriptor instead.
func (*FriendHandle) Descriptor() ([]byte, []int) {
	return file_v1_friend_proto_rawDescGZIP(), []int{0}
}

func (x *FriendHandle) GetType() FriendHandleType {
	if x != nil {
		return x.Type
	}
	return FriendHandleType_UNKNOWN_FRIEND_TYPE
}

func (x *FriendHandle) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

//添加好友请求参数
type CreateFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateFriendReq) Reset() {
	*x = CreateFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_friend_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFriendReq) ProtoMessage() {}

func (x *CreateFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_friend_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFriendReq.ProtoReflect.Descriptor instead.
func (*CreateFriendReq) Descriptor() ([]byte, []int) {
	return file_v1_friend_proto_rawDescGZIP(), []int{1}
}

//修改好友信息请求参数
type UpdateFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateFriendReq) Reset() {
	*x = UpdateFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_friend_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFriendReq) ProtoMessage() {}

func (x *UpdateFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_friend_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFriendReq.ProtoReflect.Descriptor instead.
func (*UpdateFriendReq) Descriptor() ([]byte, []int) {
	return file_v1_friend_proto_rawDescGZIP(), []int{2}
}

//查找好友信息请求参数
type SearchFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SearchFriendReq) Reset() {
	*x = SearchFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_friend_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFriendReq) ProtoMessage() {}

func (x *SearchFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_friend_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFriendReq.ProtoReflect.Descriptor instead.
func (*SearchFriendReq) Descriptor() ([]byte, []int) {
	return file_v1_friend_proto_rawDescGZIP(), []int{3}
}

//删除好友请求参数
type DeleteFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteFriendReq) Reset() {
	*x = DeleteFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_friend_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendReq) ProtoMessage() {}

func (x *DeleteFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_friend_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendReq.ProtoReflect.Descriptor instead.
func (*DeleteFriendReq) Descriptor() ([]byte, []int) {
	return file_v1_friend_proto_rawDescGZIP(), []int{4}
}

//拉黑好友请求参数
type BlackFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BlackFriendReq) Reset() {
	*x = BlackFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_friend_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlackFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlackFriendReq) ProtoMessage() {}

func (x *BlackFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_friend_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlackFriendReq.ProtoReflect.Descriptor instead.
func (*BlackFriendReq) Descriptor() ([]byte, []int) {
	return file_v1_friend_proto_rawDescGZIP(), []int{5}
}

var File_v1_friend_proto protoreflect.FileDescriptor

var file_v1_friend_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x76, 0x31, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x49, 0x0a, 0x0c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x11, 0x0a, 0x0f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x22,
	0x11, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x22, 0x10, 0x0a, 0x0e, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x2a, 0x21, 0x0a, 0x0d, 0x41, 0x64,
	0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x2a, 0x7a, 0x0a,
	0x10, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x46, 0x52, 0x49,
	0x45, 0x4e, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x11, 0x0a,
	0x0d, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x10, 0x02,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e,
	0x44, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x49, 0x53, 0x54,
	0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x10, 0x06, 0x42, 0x1e, 0x5a, 0x1c, 0x73, 0x75, 0x69,
	0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_v1_friend_proto_rawDescOnce sync.Once
	file_v1_friend_proto_rawDescData = file_v1_friend_proto_rawDesc
)

func file_v1_friend_proto_rawDescGZIP() []byte {
	file_v1_friend_proto_rawDescOnce.Do(func() {
		file_v1_friend_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_friend_proto_rawDescData)
	})
	return file_v1_friend_proto_rawDescData
}

var file_v1_friend_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_v1_friend_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_v1_friend_proto_goTypes = []interface{}{
	(AddFriendType)(0),      // 0: AddFriendType
	(FriendHandleType)(0),   // 1: FriendHandleType
	(*FriendHandle)(nil),    // 2: FriendHandle
	(*CreateFriendReq)(nil), // 3: CreateFriendReq
	(*UpdateFriendReq)(nil), // 4: UpdateFriendReq
	(*SearchFriendReq)(nil), // 5: SearchFriendReq
	(*DeleteFriendReq)(nil), // 6: DeleteFriendReq
	(*BlackFriendReq)(nil),  // 7: BlackFriendReq
}
var file_v1_friend_proto_depIdxs = []int32{
	1, // 0: FriendHandle.type:type_name -> FriendHandleType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_v1_friend_proto_init() }
func file_v1_friend_proto_init() {
	if File_v1_friend_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_friend_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendHandle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_friend_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_friend_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_friend_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_friend_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_friend_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlackFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_friend_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_friend_proto_goTypes,
		DependencyIndexes: file_v1_friend_proto_depIdxs,
		EnumInfos:         file_v1_friend_proto_enumTypes,
		MessageInfos:      file_v1_friend_proto_msgTypes,
	}.Build()
	File_v1_friend_proto = out.File
	file_v1_friend_proto_rawDesc = nil
	file_v1_friend_proto_goTypes = nil
	file_v1_friend_proto_depIdxs = nil
}
