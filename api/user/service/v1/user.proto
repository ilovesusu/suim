syntax = "proto3";

option go_package = "suim/api/user/service/v1;v1";

import "validate/validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";

//用户服务
service User {
    //hello
    rpc Hello(HelloReq)returns(HelloRsp){
        option (google.api.http) = {
            get: "/user/{name}"
        };
    }
    //创建用户
    rpc UserCreate (UserCreateReq) returns (UserCreateRsp){}
    //更新用户
    rpc UserUpdate (UserUpdateReq) returns (UserUpdateRsp){}
    //删除用户
    rpc UserDelete (UserDeleteReq) returns (UserDeleteRsp){}
    //用户信息
    rpc UserInfo (UserInfoReq) returns (UserInfoRsp){}
    //用户列表
    rpc UserList (UserListReq) returns (UserListRsp){}
    //好友操作(申请,同意,拉黑,删除...)
    rpc FriendHandle(FriendHandleReq)returns(FriendHandleRsp){}
}

//好友操作枚举
enum FriendHandle {
    UNKNOWN_COMMAND = 0;//未知操作
    ADD_FRIEND = 1;//添加好友
    PASS_FRIEND = 2;//通过好友申请
    BLACK_FRIEND = 3;//拉黑好友
    DELETE_FRIEND = 4;//删除好友
}

//hello请求参数
message HelloReq{
    string name = 1;
}
//hello响应参数
message HelloRsp{
    string hello = 1;
}
//创建用户请求参数
message UserCreateReq {
    string name = 1 [(validate.rules).string.min_len = 2];
    string phone = 2 [(validate.rules).string.len = 11];
    string nickname = 3 [(validate.rules).string.min_len = 1];
    int32 sex = 4 [(validate.rules).int32 = {in: [1, 2, 3]}];
    google.protobuf.StringValue avatar_url = 5 [(validate.rules).string.uri = true];
    google.protobuf.StringValue introduce = 6;
    bool snap_call = 7;
    int32 add_friend_type = 8 [(validate.rules).int32 = {in:[1, 2, 3, 4]}];
    google.protobuf.StringValue friend_pass_problem = 9 [(validate.rules).string.min_len = 1];
    google.protobuf.StringValue friend_pass_answer = 10 [(validate.rules).string.min_len = 1];
    string password = 11 [(validate.rules).string.min_len = 8];
    google.protobuf.StringValue id_card = 12 [(validate.rules).string.len = 18];
}
//创建用户响应参数
message UserCreateRsp {}
//更新用户请求参数
message UserUpdateReq{
    int64 id = 1 [(validate.rules).int64 = {gt: 0}];
    google.protobuf.StringValue name = 2 [(validate.rules).string.min_len = 2];
    google.protobuf.StringValue phone = 3 [(validate.rules).string.len = 11];
    google.protobuf.StringValue nickname = 4 [(validate.rules).string.min_len = 1];
    google.protobuf.Int32Value sex = 5 [(validate.rules).int32 = {in: [1, 2, 3]}];
    google.protobuf.StringValue avatar_url = 6 [(validate.rules).string.uri = true];
    google.protobuf.StringValue introduce = 7;
    google.protobuf.BoolValue snap_call = 8;
    google.protobuf.Int32Value add_friend_type = 9 [(validate.rules).int32 = {in:[1, 2, 3, 4]}];
    google.protobuf.StringValue friend_pass_problem = 10 [(validate.rules).string.min_len = 1];
    google.protobuf.StringValue friend_pass_answer = 11 [(validate.rules).string.min_len = 1];
    google.protobuf.StringValue password = 12 [(validate.rules).string.min_len = 8];
    google.protobuf.StringValue id_card = 13 [(validate.rules).string.len = 18];
}
//更新用户响应参数
message UserUpdateRsp {}
//删除用户请求参数
message UserDeleteReq {
    int64 id = 1 [(validate.rules).int64 = {gt: 0}];
}
//删除用户响应参数
message UserDeleteRsp {}
//用户信息请求参数
message UserInfoReq {
    int64 id = 1 [(validate.rules).int64 = {gt: 0}];
}
//用户信息响应参数
message UserInfoRsp {
    int64 id = 1;
    string name = 2;
    string phone = 3;
    string nickname = 4;
    int32 sex = 5;
    google.protobuf.StringValue avatar_url = 6;
    google.protobuf.StringValue introduce = 7;
    bool snap_call = 8;
    int32 add_friend_type = 9;
    google.protobuf.StringValue friend_pass_problem = 10;
    google.protobuf.StringValue friend_pass_answer = 11;
}
//用户列表请求参数
message UserListReq {
    int64 uid = 1 [(validate.rules).int64 = {gt: 0}];
    int32 friend_status = 2 [(validate.rules).int32 = {gt: 0}];
}
//用户列表响应参数
message UserListRsp{
    message List{
        int64 user_id = 1;
        string nickname = 2;
        int32 sex = 3;
        google.protobuf.StringValue avatar_url = 4;
        google.protobuf.StringValue introduce = 5;
        google.protobuf.StringValue friend_remake = 6;
    }
    repeated List list = 1;
    int32 total = 2;
}
//好友操作请求参数
message FriendHandleReq{
    int64 uid = 1 [(validate.rules).int64 = {gt: 0}];
    int64 fid = 2 [(validate.rules).int64 = {gt: 0}];
    int32 command_type = 3 [(validate.rules).int32 = {in:[1, 2, 3, 4]}];
}
//好友操作响应参数
message FriendHandleRsp{}

