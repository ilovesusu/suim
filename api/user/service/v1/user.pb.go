// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.0
// source: v1/user.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//性别枚举
type Sex int32

const (
	Sex_UNKNOWN_SEX Sex = 0 //未知
	Sex_SECRET      Sex = 1 //保密
	Sex_BOY         Sex = 2 //男
	Sex_GIRL        Sex = 3 //女
)

// Enum value maps for Sex.
var (
	Sex_name = map[int32]string{
		0: "UNKNOWN_SEX",
		1: "SECRET",
		2: "BOY",
		3: "GIRL",
	}
	Sex_value = map[string]int32{
		"UNKNOWN_SEX": 0,
		"SECRET":      1,
		"BOY":         2,
		"GIRL":        3,
	}
)

func (x Sex) Enum() *Sex {
	p := new(Sex)
	*p = x
	return p
}

func (x Sex) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Sex) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_user_proto_enumTypes[0].Descriptor()
}

func (Sex) Type() protoreflect.EnumType {
	return &file_v1_user_proto_enumTypes[0]
}

func (x Sex) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Sex.Descriptor instead.
func (Sex) EnumDescriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{0}
}

//添加好友方式
type FriendPassType int32

const (
	FriendPassType_UNKNOWN_FRIEND_PASS_TYPE FriendPassType = 0 //未知
	FriendPassType_PASS                     FriendPassType = 1 //直接通过
	FriendPassType_VERIFY                   FriendPassType = 2 //需要验证
	FriendPassType_QUESTIONS_AND_ANSWERS    FriendPassType = 3 //问题答案验证
	FriendPassType_REFUSE                   FriendPassType = 4 //拒绝加好友
)

// Enum value maps for FriendPassType.
var (
	FriendPassType_name = map[int32]string{
		0: "UNKNOWN_FRIEND_PASS_TYPE",
		1: "PASS",
		2: "VERIFY",
		3: "QUESTIONS_AND_ANSWERS",
		4: "REFUSE",
	}
	FriendPassType_value = map[string]int32{
		"UNKNOWN_FRIEND_PASS_TYPE": 0,
		"PASS":                     1,
		"VERIFY":                   2,
		"QUESTIONS_AND_ANSWERS":    3,
		"REFUSE":                   4,
	}
)

func (x FriendPassType) Enum() *FriendPassType {
	p := new(FriendPassType)
	*p = x
	return p
}

func (x FriendPassType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FriendPassType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_user_proto_enumTypes[1].Descriptor()
}

func (FriendPassType) Type() protoreflect.EnumType {
	return &file_v1_user_proto_enumTypes[1]
}

func (x FriendPassType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FriendPassType.Descriptor instead.
func (FriendPassType) EnumDescriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{1}
}

//hello请求参数
type HelloReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *HelloReq) Reset() {
	*x = HelloReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloReq) ProtoMessage() {}

func (x *HelloReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloReq.ProtoReflect.Descriptor instead.
func (*HelloReq) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{0}
}

func (x *HelloReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

//hello响应参数
type HelloRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hello string `protobuf:"bytes,1,opt,name=hello,proto3" json:"hello,omitempty"`
}

func (x *HelloRsp) Reset() {
	*x = HelloRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloRsp) ProtoMessage() {}

func (x *HelloRsp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloRsp.ProtoReflect.Descriptor instead.
func (*HelloRsp) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{1}
}

func (x *HelloRsp) GetHello() string {
	if x != nil {
		return x.Hello
	}
	return ""
}

//创建用户请求参数
type CreateUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                       //姓名
	IdCard            *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=id_card,json=idCard,proto3" json:"id_card,omitempty"`                                     //身份证号
	Phone             string                  `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`                                                     //电话号码
	Password          string                  `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                                               //密码
	Nickname          string                  `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`                                               //昵称
	Sex               int32                   `protobuf:"varint,6,opt,name=sex,proto3" json:"sex,omitempty"`                                                        //性别
	AvatarUrl         *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`                            //头像URL
	PersonalSign      *wrapperspb.StringValue `protobuf:"bytes,8,opt,name=personal_sign,json=personalSign,proto3" json:"personal_sign,omitempty"`                   //个性签名
	Introduce         *wrapperspb.StringValue `protobuf:"bytes,9,opt,name=introduce,proto3" json:"introduce,omitempty"`                                             //自我介绍
	SnapCall          bool                    `protobuf:"varint,10,opt,name=snap_call,json=snapCall,proto3" json:"snap_call,omitempty"`                             //是否允许临时会话
	AddFriendType     int32                   `protobuf:"varint,11,opt,name=add_friend_type,json=addFriendType,proto3" json:"add_friend_type,omitempty"`            //添加好友方式
	FriendPassProblem *wrapperspb.StringValue `protobuf:"bytes,12,opt,name=friend_pass_problem,json=friendPassProblem,proto3" json:"friend_pass_problem,omitempty"` //通过问题添加好友的问题
	FriendPassAnswer  *wrapperspb.StringValue `protobuf:"bytes,13,opt,name=friend_pass_answer,json=friendPassAnswer,proto3" json:"friend_pass_answer,omitempty"`    //通过问题添加好友的答案
}

func (x *CreateUserReq) Reset() {
	*x = CreateUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserReq) ProtoMessage() {}

func (x *CreateUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserReq.ProtoReflect.Descriptor instead.
func (*CreateUserReq) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{2}
}

func (x *CreateUserReq) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *CreateUserReq) GetIdCard() *wrapperspb.StringValue {
	if x != nil {
		return x.IdCard
	}
	return nil
}

func (x *CreateUserReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateUserReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateUserReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *CreateUserReq) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *CreateUserReq) GetAvatarUrl() *wrapperspb.StringValue {
	if x != nil {
		return x.AvatarUrl
	}
	return nil
}

func (x *CreateUserReq) GetPersonalSign() *wrapperspb.StringValue {
	if x != nil {
		return x.PersonalSign
	}
	return nil
}

func (x *CreateUserReq) GetIntroduce() *wrapperspb.StringValue {
	if x != nil {
		return x.Introduce
	}
	return nil
}

func (x *CreateUserReq) GetSnapCall() bool {
	if x != nil {
		return x.SnapCall
	}
	return false
}

func (x *CreateUserReq) GetAddFriendType() int32 {
	if x != nil {
		return x.AddFriendType
	}
	return 0
}

func (x *CreateUserReq) GetFriendPassProblem() *wrapperspb.StringValue {
	if x != nil {
		return x.FriendPassProblem
	}
	return nil
}

func (x *CreateUserReq) GetFriendPassAnswer() *wrapperspb.StringValue {
	if x != nil {
		return x.FriendPassAnswer
	}
	return nil
}

//创建用户响应参数
type CreateUserRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateUserRsp) Reset() {
	*x = CreateUserRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRsp) ProtoMessage() {}

func (x *CreateUserRsp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRsp.ProtoReflect.Descriptor instead.
func (*CreateUserRsp) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{3}
}

//修改身份信息请求参数
type UpdateIdCardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                      //用户id
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                   //姓名
	IdCard string `protobuf:"bytes,3,opt,name=id_card,json=idCard,proto3" json:"id_card,omitempty"` //身份证号
}

func (x *UpdateIdCardReq) Reset() {
	*x = UpdateIdCardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIdCardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIdCardReq) ProtoMessage() {}

func (x *UpdateIdCardReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIdCardReq.ProtoReflect.Descriptor instead.
func (*UpdateIdCardReq) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateIdCardReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateIdCardReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateIdCardReq) GetIdCard() string {
	if x != nil {
		return x.IdCard
	}
	return ""
}

//修改身份信息响应参数
type UpdateIdCardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateIdCardRsp) Reset() {
	*x = UpdateIdCardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIdCardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIdCardRsp) ProtoMessage() {}

func (x *UpdateIdCardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIdCardRsp.ProtoReflect.Descriptor instead.
func (*UpdateIdCardRsp) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{5}
}

//修改电话号码请求参数
type UpdatePhoneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`      //用户id
	Phone string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"` //电话号码
}

func (x *UpdatePhoneReq) Reset() {
	*x = UpdatePhoneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhoneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhoneReq) ProtoMessage() {}

func (x *UpdatePhoneReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhoneReq.ProtoReflect.Descriptor instead.
func (*UpdatePhoneReq) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{6}
}

func (x *UpdatePhoneReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatePhoneReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

//修改电话号码响应参数
type UpdatePhoneRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePhoneRsp) Reset() {
	*x = UpdatePhoneRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhoneRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhoneRsp) ProtoMessage() {}

func (x *UpdatePhoneRsp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhoneRsp.ProtoReflect.Descriptor instead.
func (*UpdatePhoneRsp) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{7}
}

//修改密码请求参数
type UpdatePasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                     //用户id
	OldPassword string `protobuf:"bytes,2,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"` //旧密码
	NewPassword string `protobuf:"bytes,3,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"` //新密码
}

func (x *UpdatePasswordReq) Reset() {
	*x = UpdatePasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePasswordReq) ProtoMessage() {}

func (x *UpdatePasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePasswordReq.ProtoReflect.Descriptor instead.
func (*UpdatePasswordReq) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{8}
}

func (x *UpdatePasswordReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatePasswordReq) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *UpdatePasswordReq) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

//修改密码响应参数
type UpdatePasswordRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePasswordRsp) Reset() {
	*x = UpdatePasswordRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePasswordRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePasswordRsp) ProtoMessage() {}

func (x *UpdatePasswordRsp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePasswordRsp.ProtoReflect.Descriptor instead.
func (*UpdatePasswordRsp) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{9}
}

//忘记密码请求参数
type ForgetPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone    string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`       //手机号
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` //密码
	Code     string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`         //验证码
}

func (x *ForgetPasswordReq) Reset() {
	*x = ForgetPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgetPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgetPasswordReq) ProtoMessage() {}

func (x *ForgetPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgetPasswordReq.ProtoReflect.Descriptor instead.
func (*ForgetPasswordReq) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{10}
}

func (x *ForgetPasswordReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ForgetPasswordReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ForgetPasswordReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

//忘记密码响应参数
type ForgetPasswordRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ForgetPasswordRsp) Reset() {
	*x = ForgetPasswordRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgetPasswordRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgetPasswordRsp) ProtoMessage() {}

func (x *ForgetPasswordRsp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgetPasswordRsp.ProtoReflect.Descriptor instead.
func (*ForgetPasswordRsp) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{11}
}

//修改昵称请求参数
type UpdateNicknameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`            //用户id
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"` //昵称
}

func (x *UpdateNicknameReq) Reset() {
	*x = UpdateNicknameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNicknameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNicknameReq) ProtoMessage() {}

func (x *UpdateNicknameReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNicknameReq.ProtoReflect.Descriptor instead.
func (*UpdateNicknameReq) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateNicknameReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateNicknameReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

//修改昵称响应参数
type UpdateNicknameRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateNicknameRsp) Reset() {
	*x = UpdateNicknameRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNicknameRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNicknameRsp) ProtoMessage() {}

func (x *UpdateNicknameRsp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNicknameRsp.ProtoReflect.Descriptor instead.
func (*UpdateNicknameRsp) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{13}
}

//修改性别请求参数
type UpdateSexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`   //用户id
	Sex int32 `protobuf:"varint,2,opt,name=sex,proto3" json:"sex,omitempty"` //性别
}

func (x *UpdateSexReq) Reset() {
	*x = UpdateSexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSexReq) ProtoMessage() {}

func (x *UpdateSexReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSexReq.ProtoReflect.Descriptor instead.
func (*UpdateSexReq) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateSexReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSexReq) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

//修改性别响应参数
type UpdateSexRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSexRsp) Reset() {
	*x = UpdateSexRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSexRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSexRsp) ProtoMessage() {}

func (x *UpdateSexRsp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSexRsp.ProtoReflect.Descriptor instead.
func (*UpdateSexRsp) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{15}
}

//修改头像请求参数
type UpdateAvatarUrlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                               //用户id
	AvatarUrl string `protobuf:"bytes,2,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"` //头像URL
}

func (x *UpdateAvatarUrlReq) Reset() {
	*x = UpdateAvatarUrlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAvatarUrlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAvatarUrlReq) ProtoMessage() {}

func (x *UpdateAvatarUrlReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAvatarUrlReq.ProtoReflect.Descriptor instead.
func (*UpdateAvatarUrlReq) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateAvatarUrlReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAvatarUrlReq) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

//修改头像响应参数
type UpdateAvatarUrlRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAvatarUrlRsp) Reset() {
	*x = UpdateAvatarUrlRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAvatarUrlRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAvatarUrlRsp) ProtoMessage() {}

func (x *UpdateAvatarUrlRsp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAvatarUrlRsp.ProtoReflect.Descriptor instead.
func (*UpdateAvatarUrlRsp) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{17}
}

//修改个性签名请求参数
type UpdatePersonalSignReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                        //用户id
	PersonalSign string `protobuf:"bytes,2,opt,name=personal_sign,json=personalSign,proto3" json:"personal_sign,omitempty"` //个性签名
}

func (x *UpdatePersonalSignReq) Reset() {
	*x = UpdatePersonalSignReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePersonalSignReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePersonalSignReq) ProtoMessage() {}

func (x *UpdatePersonalSignReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePersonalSignReq.ProtoReflect.Descriptor instead.
func (*UpdatePersonalSignReq) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{18}
}

func (x *UpdatePersonalSignReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatePersonalSignReq) GetPersonalSign() string {
	if x != nil {
		return x.PersonalSign
	}
	return ""
}

//修改个性签名响应参数
type UpdatePersonalSignRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePersonalSignRsp) Reset() {
	*x = UpdatePersonalSignRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePersonalSignRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePersonalSignRsp) ProtoMessage() {}

func (x *UpdatePersonalSignRsp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePersonalSignRsp.ProtoReflect.Descriptor instead.
func (*UpdatePersonalSignRsp) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{19}
}

//修改自我介绍请求参数
type UpdateIntroduceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`              //用户id
	Introduce string `protobuf:"bytes,2,opt,name=introduce,proto3" json:"introduce,omitempty"` //自我介绍
}

func (x *UpdateIntroduceReq) Reset() {
	*x = UpdateIntroduceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIntroduceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIntroduceReq) ProtoMessage() {}

func (x *UpdateIntroduceReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIntroduceReq.ProtoReflect.Descriptor instead.
func (*UpdateIntroduceReq) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateIntroduceReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateIntroduceReq) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

//修改自我介绍响应参数
type UpdateIntroduceRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateIntroduceRsp) Reset() {
	*x = UpdateIntroduceRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIntroduceRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIntroduceRsp) ProtoMessage() {}

func (x *UpdateIntroduceRsp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIntroduceRsp.ProtoReflect.Descriptor instead.
func (*UpdateIntroduceRsp) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{21}
}

//修改是否允许临时会话请求参数
type UpdateSnapCallReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             //用户id
	SnapCall bool  `protobuf:"varint,2,opt,name=snap_call,json=snapCall,proto3" json:"snap_call,omitempty"` //是否允许临时会话
}

func (x *UpdateSnapCallReq) Reset() {
	*x = UpdateSnapCallReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSnapCallReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSnapCallReq) ProtoMessage() {}

func (x *UpdateSnapCallReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSnapCallReq.ProtoReflect.Descriptor instead.
func (*UpdateSnapCallReq) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateSnapCallReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSnapCallReq) GetSnapCall() bool {
	if x != nil {
		return x.SnapCall
	}
	return false
}

//修改是否允许临时会话响应参数
type UpdateSnapCallRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSnapCallRsp) Reset() {
	*x = UpdateSnapCallRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSnapCallRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSnapCallRsp) ProtoMessage() {}

func (x *UpdateSnapCallRsp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSnapCallRsp.ProtoReflect.Descriptor instead.
func (*UpdateSnapCallRsp) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{23}
}

//修改添加好友方式请求参数
type UpdateFriendPassReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                         //用户id
	AddFriendType     int32                   `protobuf:"varint,2,opt,name=add_friend_type,json=addFriendType,proto3" json:"add_friend_type,omitempty"`            //添加好友方式
	FriendPassProblem *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=friend_pass_problem,json=friendPassProblem,proto3" json:"friend_pass_problem,omitempty"` //通过问题添加好友的问题
	FriendPassAnswer  *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=friend_pass_answer,json=friendPassAnswer,proto3" json:"friend_pass_answer,omitempty"`    //通过问题添加好友的答案
}

func (x *UpdateFriendPassReq) Reset() {
	*x = UpdateFriendPassReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFriendPassReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFriendPassReq) ProtoMessage() {}

func (x *UpdateFriendPassReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFriendPassReq.ProtoReflect.Descriptor instead.
func (*UpdateFriendPassReq) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateFriendPassReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateFriendPassReq) GetAddFriendType() int32 {
	if x != nil {
		return x.AddFriendType
	}
	return 0
}

func (x *UpdateFriendPassReq) GetFriendPassProblem() *wrapperspb.StringValue {
	if x != nil {
		return x.FriendPassProblem
	}
	return nil
}

func (x *UpdateFriendPassReq) GetFriendPassAnswer() *wrapperspb.StringValue {
	if x != nil {
		return x.FriendPassAnswer
	}
	return nil
}

//修改添加好友方式响应参数
type UpdateFriendPassRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateFriendPassRsp) Reset() {
	*x = UpdateFriendPassRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFriendPassRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFriendPassRsp) ProtoMessage() {}

func (x *UpdateFriendPassRsp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFriendPassRsp.ProtoReflect.Descriptor instead.
func (*UpdateFriendPassRsp) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{25}
}

//删除帐号请求参数
type DeleteUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`            //用户id
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` //密码
}

func (x *DeleteUserReq) Reset() {
	*x = DeleteUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserReq) ProtoMessage() {}

func (x *DeleteUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserReq.ProtoReflect.Descriptor instead.
func (*DeleteUserReq) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteUserReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteUserReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

//删除帐号响应参数
type DeleteUserRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteUserRsp) Reset() {
	*x = DeleteUserRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRsp) ProtoMessage() {}

func (x *DeleteUserRsp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRsp.ProtoReflect.Descriptor instead.
func (*DeleteUserRsp) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{27}
}

//查询用户基本信息请求参数
type InfoUserBaseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //用户id
}

func (x *InfoUserBaseReq) Reset() {
	*x = InfoUserBaseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoUserBaseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoUserBaseReq) ProtoMessage() {}

func (x *InfoUserBaseReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoUserBaseReq.ProtoReflect.Descriptor instead.
func (*InfoUserBaseReq) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{28}
}

func (x *InfoUserBaseReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

//查询用户基本信息响应参数
type InfoUserBaseRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number       string                  `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`                                 //用户号
	Nickname     string                  `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`                             //昵称
	Sex          int32                   `protobuf:"varint,3,opt,name=sex,proto3" json:"sex,omitempty"`                                      //性别
	AvatarUrl    *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`          //头像地址
	PersonalSign *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=personal_sign,json=personalSign,proto3" json:"personal_sign,omitempty"` //个性签名
	Introduce    *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=introduce,proto3" json:"introduce,omitempty"`                           //自我介绍
}

func (x *InfoUserBaseRsp) Reset() {
	*x = InfoUserBaseRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoUserBaseRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoUserBaseRsp) ProtoMessage() {}

func (x *InfoUserBaseRsp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoUserBaseRsp.ProtoReflect.Descriptor instead.
func (*InfoUserBaseRsp) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{29}
}

func (x *InfoUserBaseRsp) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *InfoUserBaseRsp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *InfoUserBaseRsp) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *InfoUserBaseRsp) GetAvatarUrl() *wrapperspb.StringValue {
	if x != nil {
		return x.AvatarUrl
	}
	return nil
}

func (x *InfoUserBaseRsp) GetPersonalSign() *wrapperspb.StringValue {
	if x != nil {
		return x.PersonalSign
	}
	return nil
}

func (x *InfoUserBaseRsp) GetIntroduce() *wrapperspb.StringValue {
	if x != nil {
		return x.Introduce
	}
	return nil
}

//查询用户帐号信息请求参数
type InfoAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //用户id
}

func (x *InfoAccountReq) Reset() {
	*x = InfoAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoAccountReq) ProtoMessage() {}

func (x *InfoAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoAccountReq.ProtoReflect.Descriptor instead.
func (*InfoAccountReq) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{30}
}

func (x *InfoAccountReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

//查询用户帐号信息响应参数
type InfoAccountRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone  string                  `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`                 //手机号
	Name   *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                   //姓名
	IdCard *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=id_card,json=idCard,proto3" json:"id_card,omitempty"` //身份证号码
}

func (x *InfoAccountRsp) Reset() {
	*x = InfoAccountRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoAccountRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoAccountRsp) ProtoMessage() {}

func (x *InfoAccountRsp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoAccountRsp.ProtoReflect.Descriptor instead.
func (*InfoAccountRsp) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{31}
}

func (x *InfoAccountRsp) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *InfoAccountRsp) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *InfoAccountRsp) GetIdCard() *wrapperspb.StringValue {
	if x != nil {
		return x.IdCard
	}
	return nil
}

//查询用户是否允许临时会话请求参数
type InfoSnapCallReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //用户id
}

func (x *InfoSnapCallReq) Reset() {
	*x = InfoSnapCallReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoSnapCallReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoSnapCallReq) ProtoMessage() {}

func (x *InfoSnapCallReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoSnapCallReq.ProtoReflect.Descriptor instead.
func (*InfoSnapCallReq) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{32}
}

func (x *InfoSnapCallReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

//查询用户是否允许临时会话响应参数
type InfoSnapCallRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapCall bool `protobuf:"varint,1,opt,name=snap_call,json=snapCall,proto3" json:"snap_call,omitempty"` //是否允许临时会话
}

func (x *InfoSnapCallRsp) Reset() {
	*x = InfoSnapCallRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoSnapCallRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoSnapCallRsp) ProtoMessage() {}

func (x *InfoSnapCallRsp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoSnapCallRsp.ProtoReflect.Descriptor instead.
func (*InfoSnapCallRsp) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{33}
}

func (x *InfoSnapCallRsp) GetSnapCall() bool {
	if x != nil {
		return x.SnapCall
	}
	return false
}

//查询用户添加好友方式请求参数
type InfoFriendPassReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //用户id
}

func (x *InfoFriendPassReq) Reset() {
	*x = InfoFriendPassReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoFriendPassReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoFriendPassReq) ProtoMessage() {}

func (x *InfoFriendPassReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoFriendPassReq.ProtoReflect.Descriptor instead.
func (*InfoFriendPassReq) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{34}
}

func (x *InfoFriendPassReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

//查询用户添加好友方式响应参数
type InfoFriendPassRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendPassType    int32                   `protobuf:"varint,1,opt,name=friend_pass_type,json=friendPassType,proto3" json:"friend_pass_type,omitempty"`         //添加好友方式
	FriendPassProblem *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=friend_pass_problem,json=friendPassProblem,proto3" json:"friend_pass_problem,omitempty"` //通过问题添加好友的问题
	FriendPassAnswer  *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=friend_pass_answer,json=friendPassAnswer,proto3" json:"friend_pass_answer,omitempty"`    //通过问题添加好友的答案
}

func (x *InfoFriendPassRsp) Reset() {
	*x = InfoFriendPassRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_user_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoFriendPassRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoFriendPassRsp) ProtoMessage() {}

func (x *InfoFriendPassRsp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_user_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoFriendPassRsp.ProtoReflect.Descriptor instead.
func (*InfoFriendPassRsp) Descriptor() ([]byte, []int) {
	return file_v1_user_proto_rawDescGZIP(), []int{35}
}

func (x *InfoFriendPassRsp) GetFriendPassType() int32 {
	if x != nil {
		return x.FriendPassType
	}
	return 0
}

func (x *InfoFriendPassRsp) GetFriendPassProblem() *wrapperspb.StringValue {
	if x != nil {
		return x.FriendPassProblem
	}
	return nil
}

func (x *InfoFriendPassRsp) GetFriendPassAnswer() *wrapperspb.StringValue {
	if x != nil {
		return x.FriendPassAnswer
	}
	return nil
}

var File_v1_user_proto protoreflect.FileDescriptor

var file_v1_user_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1e, 0x0a, 0x08, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x20, 0x0a, 0x08, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x22, 0x8a, 0x06, 0x0a, 0x0d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x02, 0xd0,
	0x01, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0x98, 0x01,
	0x12, 0xd0, 0x01, 0x01, 0x52, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08,
	0x72, 0x06, 0x98, 0x01, 0x0b, 0xd0, 0x01, 0x01, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x26, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x08, 0xd0, 0x01, 0x01, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xfa, 0x42,
	0x08, 0x1a, 0x06, 0x30, 0x01, 0x30, 0x02, 0x30, 0x03, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x48,
	0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0x88, 0x01, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x09, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x4d, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x46, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x01, 0xd0, 0x01, 0x01, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x35, 0x0a, 0x0f,
	0x61, 0x64, 0x64, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x1a, 0x08, 0x30, 0x01, 0x30, 0x02,
	0x30, 0x03, 0x30, 0x04, 0x52, 0x0d, 0x61, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x58, 0x0a, 0x13, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x61,
	0x73, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x11, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x56, 0x0a,
	0x12, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x5f, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01,
	0xd0, 0x01, 0x01, 0x52, 0x10, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x73, 0x70, 0x22, 0x6a, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x02, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x98, 0x01, 0x12, 0x52, 0x06, 0x69, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x73, 0x70, 0x22, 0x49, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1e, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x98, 0x01, 0x0b, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x22, 0x10, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52,
	0x73, 0x70, 0x22, 0x84, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2a, 0x0a, 0x0c, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x08,
	0x52, 0x0b, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2a, 0x0a,
	0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x08, 0x52, 0x0b, 0x6e, 0x65,
	0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x73, 0x70, 0x22, 0x76,
	0x0a, 0x11, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x98, 0x01, 0x0b, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x23, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x08, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x98, 0x01, 0x0b,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x73, 0x70, 0x22, 0x51, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x13,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x52, 0x73, 0x70, 0x22, 0x46, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x78,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x03,
	0x73, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x1a, 0x06,
	0x30, 0x01, 0x30, 0x02, 0x30, 0x03, 0x52, 0x03, 0x73, 0x65, 0x78, 0x22, 0x0e, 0x0a, 0x0c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x78, 0x52, 0x73, 0x70, 0x22, 0x56, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x72, 0x03, 0x88, 0x01, 0x01, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x55, 0x72, 0x6c, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x52, 0x73, 0x70, 0x22, 0x5e, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x0d, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x52,
	0x73, 0x70, 0x22, 0x54, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x25, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x69,
	0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x73, 0x70, 0x22, 0x49,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x43, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x6e, 0x61, 0x70, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x73, 0x6e, 0x61, 0x70, 0x43, 0x61, 0x6c, 0x6c, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x73, 0x70, 0x22, 0x97,
	0x02, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50,
	0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x35, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x1a, 0x08, 0x30,
	0x01, 0x30, 0x02, 0x30, 0x03, 0x30, 0x04, 0x52, 0x0d, 0x61, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x58, 0x0a, 0x13, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x5f, 0x70, 0x61, 0x73, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x11, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x12, 0x56, 0x0a, 0x12, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x5f,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72,
	0x05, 0x10, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x10, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x61,
	0x73, 0x73, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x52, 0x73, 0x70, 0x22,
	0x50, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x08, 0xd0, 0x01, 0x01, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x73, 0x70, 0x22, 0x2a, 0x0a, 0x0f, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x93,
	0x02, 0x0a, 0x0f, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x3b, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x41, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x3a, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x22, 0x29, 0x0a, 0x0e, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x8f, 0x01, 0x0a, 0x0e, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x69, 0x64,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72,
	0x64, 0x22, 0x2a, 0x0a, 0x0f, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x6e, 0x61, 0x70, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a,
	0x0f, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x6e, 0x61, 0x70, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x73, 0x70,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x43, 0x61, 0x6c, 0x6c, 0x22, 0x2c, 0x0a,
	0x11, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd7, 0x01, 0x0a, 0x11,
	0x49, 0x6e, 0x66, 0x6f, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x52, 0x73,
	0x70, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4c, 0x0a, 0x13, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x11, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x61,
	0x73, 0x73, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x4a, 0x0a, 0x12, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x10, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x2a, 0x35, 0x0a, 0x03, 0x53, 0x65, 0x78, 0x12, 0x0f, 0x0a, 0x0b,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x45, 0x58, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x4f, 0x59,
	0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x49, 0x52, 0x4c, 0x10, 0x03, 0x2a, 0x6b, 0x0a, 0x0e,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x18, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44,
	0x5f, 0x50, 0x41, 0x53, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x50, 0x41, 0x53, 0x53, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x56, 0x45, 0x52, 0x49, 0x46, 0x59,
	0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x51, 0x55, 0x45, 0x53, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x5f,
	0x41, 0x4e, 0x44, 0x5f, 0x41, 0x4e, 0x53, 0x57, 0x45, 0x52, 0x53, 0x10, 0x03, 0x12, 0x0a, 0x0a,
	0x06, 0x52, 0x45, 0x46, 0x55, 0x53, 0x45, 0x10, 0x04, 0x32, 0x84, 0x08, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x33, 0x0a, 0x05, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x09, 0x2e, 0x48, 0x65,
	0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x09, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x73,
	0x70, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0x2e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x10, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x31, 0x0a,
	0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x0f, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x3a, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x12, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0e,
	0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12,
	0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x12, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x52,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x78, 0x12, 0x0d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x78, 0x52, 0x65, 0x71,
	0x1a, 0x0d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x78, 0x52, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x3d, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x55, 0x72, 0x6c, 0x12, 0x13, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x52, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x46, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x53,
	0x69, 0x67, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x12, 0x13, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x13, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x6e, 0x61, 0x70, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x12, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x12, 0x14, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73,
	0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0c, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x61, 0x73, 0x65, 0x12, 0x10, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0b, 0x49,
	0x6e, 0x66, 0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0f, 0x2e, 0x49, 0x6e, 0x66,
	0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x49, 0x6e,
	0x66, 0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x34,
	0x0a, 0x0c, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x6e, 0x61, 0x70, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x10,
	0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x6e, 0x61, 0x70, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x10, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x6e, 0x61, 0x70, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0e, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x12, 0x12, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x49, 0x6e, 0x66,
	0x6f, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x52, 0x73, 0x70, 0x22, 0x00,
	0x42, 0x1d, 0x5a, 0x1b, 0x73, 0x75, 0x69, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_user_proto_rawDescOnce sync.Once
	file_v1_user_proto_rawDescData = file_v1_user_proto_rawDesc
)

func file_v1_user_proto_rawDescGZIP() []byte {
	file_v1_user_proto_rawDescOnce.Do(func() {
		file_v1_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_user_proto_rawDescData)
	})
	return file_v1_user_proto_rawDescData
}

var file_v1_user_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_v1_user_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_v1_user_proto_goTypes = []interface{}{
	(Sex)(0),                       // 0: Sex
	(FriendPassType)(0),            // 1: FriendPassType
	(*HelloReq)(nil),               // 2: HelloReq
	(*HelloRsp)(nil),               // 3: HelloRsp
	(*CreateUserReq)(nil),          // 4: CreateUserReq
	(*CreateUserRsp)(nil),          // 5: CreateUserRsp
	(*UpdateIdCardReq)(nil),        // 6: UpdateIdCardReq
	(*UpdateIdCardRsp)(nil),        // 7: UpdateIdCardRsp
	(*UpdatePhoneReq)(nil),         // 8: UpdatePhoneReq
	(*UpdatePhoneRsp)(nil),         // 9: UpdatePhoneRsp
	(*UpdatePasswordReq)(nil),      // 10: UpdatePasswordReq
	(*UpdatePasswordRsp)(nil),      // 11: UpdatePasswordRsp
	(*ForgetPasswordReq)(nil),      // 12: ForgetPasswordReq
	(*ForgetPasswordRsp)(nil),      // 13: ForgetPasswordRsp
	(*UpdateNicknameReq)(nil),      // 14: UpdateNicknameReq
	(*UpdateNicknameRsp)(nil),      // 15: UpdateNicknameRsp
	(*UpdateSexReq)(nil),           // 16: UpdateSexReq
	(*UpdateSexRsp)(nil),           // 17: UpdateSexRsp
	(*UpdateAvatarUrlReq)(nil),     // 18: UpdateAvatarUrlReq
	(*UpdateAvatarUrlRsp)(nil),     // 19: UpdateAvatarUrlRsp
	(*UpdatePersonalSignReq)(nil),  // 20: UpdatePersonalSignReq
	(*UpdatePersonalSignRsp)(nil),  // 21: UpdatePersonalSignRsp
	(*UpdateIntroduceReq)(nil),     // 22: UpdateIntroduceReq
	(*UpdateIntroduceRsp)(nil),     // 23: UpdateIntroduceRsp
	(*UpdateSnapCallReq)(nil),      // 24: UpdateSnapCallReq
	(*UpdateSnapCallRsp)(nil),      // 25: UpdateSnapCallRsp
	(*UpdateFriendPassReq)(nil),    // 26: UpdateFriendPassReq
	(*UpdateFriendPassRsp)(nil),    // 27: UpdateFriendPassRsp
	(*DeleteUserReq)(nil),          // 28: DeleteUserReq
	(*DeleteUserRsp)(nil),          // 29: DeleteUserRsp
	(*InfoUserBaseReq)(nil),        // 30: InfoUserBaseReq
	(*InfoUserBaseRsp)(nil),        // 31: InfoUserBaseRsp
	(*InfoAccountReq)(nil),         // 32: InfoAccountReq
	(*InfoAccountRsp)(nil),         // 33: InfoAccountRsp
	(*InfoSnapCallReq)(nil),        // 34: InfoSnapCallReq
	(*InfoSnapCallRsp)(nil),        // 35: InfoSnapCallRsp
	(*InfoFriendPassReq)(nil),      // 36: InfoFriendPassReq
	(*InfoFriendPassRsp)(nil),      // 37: InfoFriendPassRsp
	(*wrapperspb.StringValue)(nil), // 38: google.protobuf.StringValue
}
var file_v1_user_proto_depIdxs = []int32{
	38, // 0: CreateUserReq.name:type_name -> google.protobuf.StringValue
	38, // 1: CreateUserReq.id_card:type_name -> google.protobuf.StringValue
	38, // 2: CreateUserReq.avatar_url:type_name -> google.protobuf.StringValue
	38, // 3: CreateUserReq.personal_sign:type_name -> google.protobuf.StringValue
	38, // 4: CreateUserReq.introduce:type_name -> google.protobuf.StringValue
	38, // 5: CreateUserReq.friend_pass_problem:type_name -> google.protobuf.StringValue
	38, // 6: CreateUserReq.friend_pass_answer:type_name -> google.protobuf.StringValue
	38, // 7: UpdateFriendPassReq.friend_pass_problem:type_name -> google.protobuf.StringValue
	38, // 8: UpdateFriendPassReq.friend_pass_answer:type_name -> google.protobuf.StringValue
	38, // 9: InfoUserBaseRsp.avatar_url:type_name -> google.protobuf.StringValue
	38, // 10: InfoUserBaseRsp.personal_sign:type_name -> google.protobuf.StringValue
	38, // 11: InfoUserBaseRsp.introduce:type_name -> google.protobuf.StringValue
	38, // 12: InfoAccountRsp.name:type_name -> google.protobuf.StringValue
	38, // 13: InfoAccountRsp.id_card:type_name -> google.protobuf.StringValue
	38, // 14: InfoFriendPassRsp.friend_pass_problem:type_name -> google.protobuf.StringValue
	38, // 15: InfoFriendPassRsp.friend_pass_answer:type_name -> google.protobuf.StringValue
	2,  // 16: User.Hello:input_type -> HelloReq
	4,  // 17: User.CreateUser:input_type -> CreateUserReq
	6,  // 18: User.UpdateIdCard:input_type -> UpdateIdCardReq
	8,  // 19: User.UpdatePhone:input_type -> UpdatePhoneReq
	10, // 20: User.UpdatePassword:input_type -> UpdatePasswordReq
	12, // 21: User.ForgetPassword:input_type -> ForgetPasswordReq
	14, // 22: User.UpdateNickname:input_type -> UpdateNicknameReq
	16, // 23: User.UpdateSex:input_type -> UpdateSexReq
	18, // 24: User.UpdateAvatarUrl:input_type -> UpdateAvatarUrlReq
	20, // 25: User.UpdatePersonalSign:input_type -> UpdatePersonalSignReq
	22, // 26: User.UpdateIntroduce:input_type -> UpdateIntroduceReq
	24, // 27: User.UpdateSnapCall:input_type -> UpdateSnapCallReq
	26, // 28: User.UpdateFriendPass:input_type -> UpdateFriendPassReq
	28, // 29: User.DeleteUser:input_type -> DeleteUserReq
	30, // 30: User.InfoUserBase:input_type -> InfoUserBaseReq
	32, // 31: User.InfoAccount:input_type -> InfoAccountReq
	34, // 32: User.InfoSnapCall:input_type -> InfoSnapCallReq
	36, // 33: User.InfoFriendPass:input_type -> InfoFriendPassReq
	3,  // 34: User.Hello:output_type -> HelloRsp
	5,  // 35: User.CreateUser:output_type -> CreateUserRsp
	7,  // 36: User.UpdateIdCard:output_type -> UpdateIdCardRsp
	9,  // 37: User.UpdatePhone:output_type -> UpdatePhoneRsp
	11, // 38: User.UpdatePassword:output_type -> UpdatePasswordRsp
	13, // 39: User.ForgetPassword:output_type -> ForgetPasswordRsp
	15, // 40: User.UpdateNickname:output_type -> UpdateNicknameRsp
	17, // 41: User.UpdateSex:output_type -> UpdateSexRsp
	19, // 42: User.UpdateAvatarUrl:output_type -> UpdateAvatarUrlRsp
	21, // 43: User.UpdatePersonalSign:output_type -> UpdatePersonalSignRsp
	23, // 44: User.UpdateIntroduce:output_type -> UpdateIntroduceRsp
	25, // 45: User.UpdateSnapCall:output_type -> UpdateSnapCallRsp
	27, // 46: User.UpdateFriendPass:output_type -> UpdateFriendPassRsp
	29, // 47: User.DeleteUser:output_type -> DeleteUserRsp
	31, // 48: User.InfoUserBase:output_type -> InfoUserBaseRsp
	33, // 49: User.InfoAccount:output_type -> InfoAccountRsp
	35, // 50: User.InfoSnapCall:output_type -> InfoSnapCallRsp
	37, // 51: User.InfoFriendPass:output_type -> InfoFriendPassRsp
	34, // [34:52] is the sub-list for method output_type
	16, // [16:34] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_v1_user_proto_init() }
func file_v1_user_proto_init() {
	if File_v1_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIdCardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIdCardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhoneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhoneRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePasswordRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgetPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgetPasswordRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNicknameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNicknameRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSexRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAvatarUrlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAvatarUrlRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePersonalSignReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePersonalSignRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIntroduceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIntroduceRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSnapCallReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSnapCallRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFriendPassReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFriendPassRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoUserBaseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoUserBaseRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoAccountRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoSnapCallReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoSnapCallRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoFriendPassReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_user_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoFriendPassRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_user_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_user_proto_goTypes,
		DependencyIndexes: file_v1_user_proto_depIdxs,
		EnumInfos:         file_v1_user_proto_enumTypes,
		MessageInfos:      file_v1_user_proto_msgTypes,
	}.Build()
	File_v1_user_proto = out.File
	file_v1_user_proto_rawDesc = nil
	file_v1_user_proto_goTypes = nil
	file_v1_user_proto_depIdxs = nil
}
