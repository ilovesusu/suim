// Code generated by protoc-gen-go-errors. DO NOT EDIT.

package v1

import (
	fmt "fmt"
	errors "github.com/go-kratos/kratos/v2/errors"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
const _ = errors.SupportPackageIsVersion1

func IsErrorUnknown(err error) bool {
	e := errors.FromError(err)
	return e.Reason == Error_ERROR_UNKNOWN.String() && e.Code == 500
}

func ErrorErrorUnknown(format string, args ...interface{}) *errors.Error {
	return errors.New(500, Error_ERROR_UNKNOWN.String(), fmt.Sprintf(format, args...))
}

func IsErrorSuccess(err error) bool {
	e := errors.FromError(err)
	return e.Reason == Error_ERROR_SUCCESS.String() && e.Code == 500
}

func ErrorErrorSuccess(format string, args ...interface{}) *errors.Error {
	return errors.New(500, Error_ERROR_SUCCESS.String(), fmt.Sprintf(format, args...))
}

func IsErrorFail(err error) bool {
	e := errors.FromError(err)
	return e.Reason == Error_ERROR_FAIL.String() && e.Code == 500
}

func ErrorErrorFail(format string, args ...interface{}) *errors.Error {
	return errors.New(500, Error_ERROR_FAIL.String(), fmt.Sprintf(format, args...))
}

func IsErrorPhoneIsUsed(err error) bool {
	e := errors.FromError(err)
	return e.Reason == Error_ERROR_PHONE_IS_USED.String() && e.Code == 500
}

func ErrorErrorPhoneIsUsed(format string, args ...interface{}) *errors.Error {
	return errors.New(500, Error_ERROR_PHONE_IS_USED.String(), fmt.Sprintf(format, args...))
}
